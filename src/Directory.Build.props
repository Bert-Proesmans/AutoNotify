<Project>
  <ItemGroup>
    <!-- 
      NOTE; Template files are included into final binary as EmbeddedResource so they don't need to be accounted 
      for during build and pack.
    -->
    <EmbeddedResource Include="@(None -> WithMetadataValue('Extension', '.scriban'))" />
  </ItemGroup>

  <!-- 
    NOTE; For every (NuGet) PackageReference with Pack=true, include the assemblies into our own package.
    Useful for compiler analyzers and source generators.
    
    This target runs for all dynamic libraries, but batched for each NuGet package.
  -->
  <Target Name="GeneratorAddPackDependencies"
          Inputs="@(RuntimeCopyLocalItems)"
          Outputs="%(RuntimeCopyLocalItems.NuGetPackageId)"
          DependsOnTargets="ResolvePackageAssets"
          BeforeTargets="_GetPackageFiles;GenerateNuspec"
          AfterTargets="ResolvePackageAssets">
    <ItemGroup>
      <!-- 
        NOTE; Requires ResolvePackageAssets to have run.
      -->
      <_NuGetPackageId Include="@(RuntimeCopyLocalItems -&gt; '%(NuGetPackageId)')" />
    </ItemGroup>
    <PropertyGroup>
      <_NuGetPackageId>@(_NuGetPackageId -&gt; Distinct())</_NuGetPackageId>
    </PropertyGroup>
    <ItemGroup>
      <!-- NOTE; Get exactly one Package Reference item for the defined PackageID -->
      <_PackageReferenceDependency Include="@(PackageReference -&gt; WithMetadataValue('Identity', '$(_NuGetPackageId)'))" />
    </ItemGroup>
    <PropertyGroup>
      <_NuGetPackagePack>@(_PackageReferenceDependency -&gt; '%(PackForGenerator)')</_NuGetPackagePack>
    </PropertyGroup>
    <ItemGroup Condition="'$(_NuGetPackagePack)' == 'true'">
      <_PackageFiles Include="@(RuntimeCopyLocalItems)">
        <PackagePath>analyzers/dotnet/cs</PackagePath>
      </_PackageFiles>
      <!--<_PackageFiles Include="@(RuntimeCopyLocalItems)" PackagePath="$(BuildOutputTargetFolder)/$(TargetFramework)/%(Filename)%(Extension)" />-->
      <!--<RuntimeCopyLocalItems Update="@(RuntimeCopyLocalItems)" CopyLocal="true" Private="true" />
      <ResolvedFileToPublish Include="@(RuntimeCopyLocalItems)" CopyToPublishDirectory="PreserveNewest" RelativePath="%(Filename)%(Extension)" />-->
    </ItemGroup>
  </Target>

  <Target Name="GeneratorCopyProjectReferencesToPackage"
          DependsOnTargets="BuildOnlySettings;ResolveReferences"
          BeforeTargets="_GetPackageFiles;GenerateNuspec"
          AfterTargets="ResolveReferences">
    <ItemGroup>
      <_ProjectReferenceDependency Include="@(ReferenceCopyLocalPaths -&gt; WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))"/>
    </ItemGroup>
    <ItemGroup>
      <_PackageFiles Include="@(_ProjectReferenceDependency -&gt; WithMetadataValue('PackForGenerator', 'true'))">
        <PackagePath>analyzers/dotnet/cs</PackagePath>
      </_PackageFiles>
      <!--<_PackageFiles Include="@(_ReferenceCopyLocalPaths)" PackagePath="$(BuildOutputTargetFolder)/$(TargetFramework)/%(Filename)%(Extension)" />-->
    </ItemGroup>
  </Target>

  <!--<PropertyGroup>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>

  <Target Name="AddPackProjectReferencesDependencies"
          DependsOnTargets="BuildOnlySettings;ResolveReferences"
          BeforeTargets="GenerateNuspec"
          AfterTargets="ResolveReferences">
    <ItemGroup>
      <_ReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths -&gt; WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')"/>
    </ItemGroup>

    -->
  <!-- DEBUG -->
  <!--
    <Message Text="Batch for .nupkg: ReferenceCopyLocalPaths = @(_ReferenceCopyLocalPaths)" Importance="High" Condition="'@(_ReferenceCopyLocalPaths)' != ''" />
    -->
  <!--<Message Text="Batch for .nupkg: ReferenceCopyLocalPaths = @(_ReferenceCopyLocalPaths), ReferenceCopyLocalPaths.DestinationSubDirectory = %(_ReferenceCopyLocalPaths.DestinationSubDirectory) Filename = %(_ReferenceCopyLocalPaths.Filename) Extension = %(_ReferenceCopyLocalPaths.Extension)" Importance="High" Condition="'@(_ReferenceCopyLocalPaths)' != ''" />-->
  <!--

    <PropertyGroup>
      <NuGetPackagePack>@(_ReferenceCopyLocalPaths -&gt; '%(Pack)')</NuGetPackagePack>
    </PropertyGroup>
    
    <ItemGroup Condition="'$(NuGetPackagePack)' == 'true'">
      -->
  <!-- Add file to package with consideration of sub folder. If empty, the root folder is chosen. -->
  <!--
      <BuildOutputInPackage Include="@(_ReferenceCopyLocalPaths)" TargetPath="%(_ReferenceCopyLocalPaths.DestinationSubDirectory)"/>
    </ItemGroup>
  </Target>-->

</Project>